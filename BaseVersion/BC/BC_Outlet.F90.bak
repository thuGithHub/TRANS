SUBROUTINE BC_Outlet(Ibgn,Iend,Jbgn,Jend,Kbgn,Kend  ,Kindsub_BC      ,sweep,IJK,minormax)
    USE Global
    IMPLICIT NONE
    
    INTEGER:: Ibgn,Iend,Jbgn,Jend,Kbgn,Kend
    INTEGER:: Kindsub_BC
    INTEGER:: sweep
    INTEGER:: IJK, MinorMax

    INTEGER:: I,J,K,L

    INTEGER:: I_L0,I_L1,I_L2
    INTEGER:: J_L0,J_L1,J_L2
    INTEGER:: K_L0,K_L1,K_L2
    INTEGER:: I_R0,I_R1,I_R2
    INTEGER:: J_R0,J_R1,J_R2
    INTEGER:: K_R0,K_R1,K_R2
    
    INTEGER:: I_VL0,J_VL0,K_VL0
    INTEGER:: I_VR0,I_VR1
    INTEGER:: J_VR0,J_VR1
    INTEGER:: K_VR0,K_VR1
    real::rcs1,rcs2,RoVr2,den_ratio,cosr,sinr,Vabs,Wabs 

        if(sweep==-2)then
          DO K=Kbgn,Kend
          DO J=Jbgn,Jend
          DO I=Ibgn,Iend

        CALL VBC_SETlrnum(I_L0,J_L0,K_L0,I_R0,J_R0,K_R0,I_L1,J_L1,K_L1,I_R1,J_R1,K_R1,I_L2,J_L2,K_L2,I_R2,J_R2,K_R2, &
        &         I_VL0,J_VL0,K_VL0,   I_VR0,J_VR0,K_VR0,I_VR1,J_VR1,K_VR1,I,J,K,IJK,MinorMax)
        
               Vol(I_l0,J_l0,K_l0)=Vol(I_r0,J_r0,K_r0) 
               Vol(I_l1,J_l1,K_l1)=Vol(I_r0,J_r0,K_r0) 
               Dst(I_l0,J_l0,K_l0)=Dst(I_r0,J_r0,K_r0) 
               Dst(I_l1,J_l1,K_l1)=Dst(I_r0,J_r0,K_r0) 
               Alagm(IJK,I_l0,J_l0,K_l0)=Alagm(IJK,I_r0,J_r0,K_r0) 
               Alagm(IJK,I_l1,J_l1,K_l1)=Alagm(IJK,I_r0,J_r0,K_r0)
                
                rad(I_l0,J_l0,K_l0)=2.0*rad(I_r0,J_r0,K_r0)-rad(I_r1,J_r1,K_r1)
                rad(I_l1,J_l1,K_l1)=2.0*rad(I_l0,J_l0,K_l0)-rad(I_r0,J_r0,K_r0)
                rad(I_l2,J_l2,K_l2)=2.0*rad(I_l1,J_l1,K_l1)-rad(I_l0,J_l0,K_l0)
                thtc(I_l0,J_l0,K_l0)=2.0*thtc(I_r0,J_r0,K_r0)-thtc(I_r1,J_r1,K_r1)
                thtc(I_l1,J_l1,K_l1)=2.0*thtc(I_l0,J_l0,K_l0)-thtc(I_r0,J_r0,K_r0)
                thtc(I_l2,J_l2,K_l2)=2.0*thtc(I_l1,J_l1,K_l1)-thtc(I_l0,J_l0,K_l0)
                do L=1,3        
                    SD(IJK,L,I_VL0,J_VL0,K_VL0)=2.0*SD(IJK,L,I_VR0,J_VR0,K_VR0)-SD(IJK,L,I_VR1,J_VR1,K_VR1)
                enddo
            enddo
            enddo
            enddo
    elseif(sweep==0)then
            do K=Kbgn,Kend
            do J=Jbgn,Jend
            do I=Ibgn,Iend
                CALL VBC_SETlrnum(I_L0,J_L0,K_L0,I_R0,J_R0,K_R0,I_L1,J_L1,K_L1,I_R1,J_R1,K_R1,I_L2,J_L2,K_L2,I_R2,J_R2,K_R2,    &
                &            I_VL0,J_VL0,K_VL0,   I_VR0,J_VR0,K_VR0,   I_VR1,J_VR1,K_VR1,I,J,K,  IJK,MinorMax)

                do L=1,18
                    DqDxyz(L,I_l0,J_l0,K_l0)=DqDxyz(L,I_r0,J_r0,K_r0)
                enddo
            enddo
            enddo
            enddo
    elseif(sweep==-1)then
        if(kindsub_BC==0)then
            do K=Kbgn,Kend
            do J=Jbgn,Jend
            do I=Ibgn,Iend
                CALL VBC_SETlrnum(I_L0,J_L0,K_L0,I_R0,J_R0,K_R0,I_L1,J_L1,K_L1,I_R1,J_R1,K_R1,I_L2,J_L2,K_L2,I_R2,J_R2,K_R2,    &
                &            I_VL0,J_VL0,K_VL0,   I_VR0,J_VR0,K_VR0,   I_VR1,J_VR1,K_VR1,   &
                &            I,J,K,  IJK,MinorMax)
        
                V(1,I_l0,J_l0,K_l0 ) = +V(1,I_r0,J_r0,K_r0)
                V(2,I_l0,J_l0,K_l0 ) = +V(2,I_r0,J_r0,K_r0)
                V(3,I_l0,J_l0,K_l0 ) = +V(3,I_r0,J_r0,K_r0)
                V(4,I_l0,J_l0,K_l0 ) = +V(4,I_r0,J_r0,K_r0)
                PP(I_l0,J_l0,K_l0)   = +PP(I_r0,J_r0,K_r0)
                T (I_l0,J_l0,K_l0)   = +T(I_r0,J_r0,K_r0)
                                      
                V(1,I_l1,J_l1,K_l1 ) =  +V(1,I_r0,J_r0,K_r0)
                V(2,I_l1,J_l1,K_l1 ) =  +V(2,I_r0,J_r0,K_r0)
                V(3,I_l1,J_l1,K_l1 ) =  +V(3,I_r0,J_r0,K_r0)
                V(4,I_l1,J_l1,K_l1 ) =  +V(4,I_r0,J_r0,K_r0)
                PP(I_l1,J_l1,K_l1)   =  +PP(I_r0,J_r0,K_r0)
                T (I_l1,J_l1,K_l1)   =  +T(I_r0,J_r0,K_r0)

                V(1,I_l2,J_l2,K_l2 ) = +V(1,I_r0,J_r0,K_r0)
                V(2,I_l2,J_l2,K_l2 ) = +V(2,I_r0,J_r0,K_r0)
                V(3,I_l2,J_l2,K_l2 ) = +V(3,I_r0,J_r0,K_r0)
                V(4,I_l2,J_l2,K_l2 ) = +V(4,I_r0,J_r0,K_r0)
                PP(I_l2,J_l2,K_l2)   = +PP(I_r0,J_r0,K_r0)
                T (I_l2,J_l2,K_l2)   = +T(I_r0,J_r0,K_r0)
                if(IF_turb)then
                    V(6,I_l0,J_l0,K_l0)=V(6,I_r0,J_r0,K_r0)
                    V(7,I_l0,J_l0,K_l0)=V(7,I_r0,J_r0,K_r0)
                    Rmiu(I_l0,J_l0,K_l0)=Rmiu(I_r0,J_r0,K_r0)
                    V(6,I_l1,J_l1,K_l1)=V(6,I_l0,J_l0,K_l0)
                    V(7,I_l1,J_l1,K_l1)=V(7,I_l0,J_l0,K_l0)
                    Rmiu(I_l1,J_l1,K_l1)=Rmiu(I_l0,J_l0,K_l0)
                    V(6,I_l2,J_l2,K_l2)=V(6,I_l0,J_l0,K_l0)
                    V(7,I_l2,J_l2,K_l2)=V(7,I_l0,J_l0,K_l0)
                    Rmiu(I_l2,J_l2,K_l2)=Rmiu(I_l0,J_l0,K_l0)
                endif
            enddo
            enddo
            enddo
        elseif(Kindsub_BC.ne.0)then  !turbomachinery Outlet BCs
            do k=Kbgn,Kend
            do j=Jbgn,Jend
            do i=Ibgn,Iend
                CALL VBC_SETlrnum    (I_L0,J_L0,K_L0,I_R0,J_R0,K_R0,I_L1,J_L1,K_L1,I_R1,J_R1,K_R1,I_L2,J_L2,K_L2,I_R2,J_R2,K_R2,    &
                &            I_VL0,J_VL0,K_VL0,   I_VR0,J_VR0,K_VR0,   I_VR1,J_VR1,K_VR1,   &
                &            I,J,K,  IJK,MinorMax)
   !          if(If_EquT)then
   !              T(I_l0,J_l0,K_l0 ) =  Wall_Temp/Tinf  !-T(I_r0,J_r0,K_r0)
   !              T(I_l1,J_l1,K_l1 ) =  Wall_Temp/Tinf  !-T(I_r1,J_r1,K_r1)
   !              T(I_l2,J_l2,K_l2 ) =  Wall_Temp/Tinf  !-T(I_r2,J_r2,K_r2)
   !          else
                     T(I_l0,J_l0,K_l0 ) =  T(I_r0,J_r0,K_r0)
                     T(I_l1,J_l1,K_l1 ) =  T(I_l0,J_l0,K_l0)
                     T(I_l2,J_l2,K_l2 ) =  T(I_l0,J_l0,K_l0)
   !          endif

                if(j==Jbgn)then
                    PP(I_l0,J_l0,K_l0)=Pouthub
                    PP(I_l1,J_l1,K_l1 ) = Pouthub
                    PP(I_l2,J_l2,K_l2 ) = Pouthub
                    rcs1=0.0
                    rcs2=0.0
                    RoVr2=0.0
                else    
                  !  rcs1=sqrt(Yc(I_R0,J_R0,K_R0)**2.0+Zc(I_R0,J_R0,K_R0)**2.0)
                    rcs1=rad(I_l0,J_l0,K_l0)
                  !  rcs2=sqrt(Yc(I_R0,J_R0-1,K_R0)**2.0+Zc(I_R0,J_R0-1,K_R0)**2.0)
                    rcs2=rad(I_l0,J_l0-1,K_l0)
                  !  Vabs=V(3,I_l0,J_l0-1,K_l0)/V(1,I_l0,J_l0-1,K_l0)-omega(1)*Zc(I_r0,J_r0-1,K_r0)
                  !  Wabs=V(4,I_r0,J_l0-1,K_l0)/V(1,I_l0,J_l0-1,K_l0)+omega(1)*Yc(I_r0,J_r0-1,K_r0)
                    sinr=sin(thtc(I_l0,J_l0-1,K_l0))
                    cosr=cos(thtc(I_l0,J_l0-1,K_l0))
                    RoVr2=(V(4,I_l0,J_l0-1,K_l0)/V(1,I_l0,J_l0-1,K_l0)*cosr-sinr*V(3,I_l0,J_l0-1,K_l0)/V(1,I_l0,J_l0-1,K_l0) &
                    &   +omega(1)*rcs2)**2.0    !(Vabs*sinr-Wabs*cosr)**2.0
                    PP(I_l0,J_l0,K_l0)=PP(I_l0,J_l0-1,K_l0)+abs((rcs1-rcs2))*V(1,I_l0,J_l0-1,K_l0)*RoVr2/(rcs2+Tiny)
                endif

           write(*,*)"Outlet",i_l0,j_l0,k_l0,PP(i_l0,J_l0,K_l0) ,V(3:4,i_l0,j_l0-1,k_l0)
           write(*,*),"omrga",omega(1),rcs2
                V(1,I_l0,J_l0,K_l0 ) = PP(I_l0,J_l0,K_l0)/(T(I_l0,J_l0,K_l0)+Tiny)*RXM2   !by ydd
                den_ratio=V(1,I_l0,J_l0,K_l0 )/(V(1,I_r0,J_r0,K_r0 )+Tiny)  
                V(2,I_l0,J_l0,K_l0 ) =V(2,I_r0,J_r0,K_r0)*den_ratio     !  u(-1)=-u(1) => den(-1)u(-1)=-den(-1)*u(1)=-den(1)*u(1)*den_ratio
                V(3,I_l0,J_l0,K_l0 ) =V(3,I_r0,J_r0,K_r0)*den_ratio
                V(4,I_l0,J_l0,K_l0 ) =V(4,I_r0,J_r0,K_r0)*den_ratio
                T(I_l0,J_l0,K_l0)=RXM2*PP(I_l0,J_l0,K_l0)/V(1,I_l0,J_l0,K_l0)

                PP(I_l1,J_l1,K_l1)=PP(I_l0,J_l0,K_l0)
                V(1,I_l1,J_l1,K_l1)=V(1,I_l0,J_l0,K_l0) 
                V(2,I_l1,J_l1,K_l1)=V(2,I_l0,J_l0,K_l0) 
                V(3,I_l1,J_l1,K_l1)=V(3,I_l0,J_l0,K_l0) 
                V(4,I_l1,J_l1,K_l1)=V(4,I_l0,J_l0,K_l0) 
                T(I_l1,J_l1,K_l1)=RXM2*PP(I_l1,J_l1,K_l1)/V(1,I_l1,J_l1,K_l1)
                
                PP(I_l2,J_l2,K_l2)=PP(I_l1,J_l1,K_l1)
                V(1,I_l2,J_l2,K_l2)=V(1,I_l1,J_l1,K_l1)
                V(2,I_l2,J_l2,K_l2)=V(2,I_l1,J_l1,K_l1)
                V(3,I_l2,J_l2,K_l2)=V(3,I_l1,J_l1,K_l1)
               V(4,I_l2,J_l2,K_l2)=V(4,I_l1,J_l1,K_l1)
                T(I_l2,J_l2,K_l2)=PP(I_l2,J_l2,K_l2)*RXM2/V(1,I_l2,J_l2,K_l2)
              
                if(IF_turb)then
                    V(6,I_l0,J_l0,K_l0)=V(6,I_r0,J_r0,K_r0)
                    V(7,I_l0,J_l0,K_l0)=V(7,I_r0,J_r0,K_r0)
                    Rmiu(I_l0,J_l0,K_l0)=Rmiu(I_r0,J_r0,K_r0)
                    V(6,I_l1,J_l1,K_l1)=V(6,I_l0,J_l0,K_l0)
                    V(7,I_l1,J_l1,K_l1)=V(7,I_l0,J_l0,K_l0)
                    Rmiu(I_l1,J_l1,K_l1)=Rmiu(I_l0,J_l0,K_l0)
                    V(6,I_l2,J_l2,K_l2)=V(6,I_l0,J_l0,K_l0)
                    V(7,I_l2,J_l2,K_l2)=V(7,I_l0,J_l0,K_l0)
                    Rmiu(I_l2,J_l2,K_l2)=Rmiu(I_l0,J_l0,K_l0)
                endif
            enddo
            enddo
            enddo 
        endif
    endif
    
END SUBROUTINE BC_Outlet


