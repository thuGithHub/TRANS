SUBROUTINE BC_Wall(Ibgn,Iend,Jbgn,Jend,Kbgn,Kend,Kindsub_BC ,sweep,IJK,minormax)
    USE Global
    IMPLICIT NONE
    
    INTEGER:: Ibgn,Iend,Jbgn,Jend,Kbgn,Kend
    INTEGER:: sweep,Kindsub_BC
    INTEGER:: IJK, MinorMax

    INTEGER:: I,J,K,L

    INTEGER:: I_L0,I_L1,I_L2
    INTEGER:: J_L0,J_L1,J_L2
    INTEGER:: K_L0,K_L1,K_L2
    INTEGER:: I_R0,I_R1,I_R2
    INTEGER:: J_R0,J_R1,J_R2
    INTEGER:: K_R0,K_R1,K_R2

    INTEGER:: I_VL0,J_VL0,K_VL0
    INTEGER:: I_VR0,I_VR1
    INTEGER:: J_VR0,J_VR1
    INTEGER:: K_VR0,K_VR1
    
    REAL:: Dn,Den,Rmiu1,TT,Rmiuw,Omegaw,den_ratio !by dzw05
    real::vibc,vjbc,vkbc,denBC,TBC,PBC

        if(sweep==-2)then
          DO K=Kbgn,Kend
          DO J=Jbgn,Jend
          DO I=Ibgn,Iend

            CALL VBC_SETlrnum(I_L0,J_L0,K_L0,I_R0,J_R0,K_R0,I_L1,J_L1,K_L1,I_R1,J_R1,K_R1,I_L2,J_L2,K_L2,I_R2,J_R2,K_R2, &
            &         I_VL0,J_VL0,K_VL0,   I_VR0,J_VR0,K_VR0,I_VR1,J_VR1,K_VR1,I,J,K,IJK,MinorMax)
        
               Vol(I_l0,J_l0,K_l0)=Vol(I_r0,J_r0,K_r0) 
               Dst(I_l0,J_l0,K_l0)=Dst(I_r0,J_r0,K_r0) 
               Alagm(IJK,I_l0,J_l0,K_l0)=Alagm(IJK,I_r0,J_r0,K_r0) 
               Vol(I_l1,J_l1,K_l1)=Vol(I_r0,J_r0,K_r0) 
               Dst(I_l1,J_l1,K_l1)=Dst(I_r0,J_r0,K_r0) 
               Alagm(IJK,I_l1,J_l1,K_l1)=Alagm(IJK,I_r0,J_r0,K_r0)
 
                rad(I_l0,J_l0,K_l0)=2.0*rad(I_r0,J_r0,K_r0)-rad(I_r1,J_r1,K_r1)
                rad(I_l1,J_l1,K_l1)=2.0*rad(I_l0,J_l0,K_l0)-rad(I_r0,J_r0,K_r0)
                rad(I_l2,J_l2,K_l2)=2.0*rad(I_l1,J_l1,K_l1)-rad(I_l0,J_l0,K_l0)
                thtc(I_l0,J_l0,K_l0)=2.0*thtc(I_r0,J_r0,K_r0)-thtc(I_r1,J_r1,K_r1)
                thtc(I_l1,J_l1,K_l1)=2.0*thtc(I_l0,J_l0,K_l0)-thtc(I_r0,J_r0,K_r0)
                thtc(I_l2,J_l2,K_l2)=2.0*thtc(I_l1,J_l1,K_l1)-thtc(I_l0,J_l0,K_l0)
               ! rad(I_l0,J_l0,K_l0)=rad(I_r0,J_r0,K_r0)
               ! rad(I_l1,J_l1,K_l1)=rad(I_r0,J_r0,K_r0)
               ! rad(I_l2,J_l2,K_l2)=rad(I_r0,J_r0,K_r0)

               ! thtc(I_l0,J_l0,K_l0)=thtc(I_r0,J_r0,K_r0)
               ! thtc(I_l1,J_l1,K_l1)=thtc(I_r0,J_r0,K_r0)
               ! thtc(I_l2,J_l2,K_l2)=thtc(I_r0,J_r0,K_r0)
!               thtf(IJK,I_VL0,J_Vl0,K_Vl0)=thtf(IJK,I_VR0,J_VR0,K_VR0)
                do L=1,3        
                    SD(IJK,L,I_VL0,J_VL0,K_VL0)=2.0*SD(IJK,L,I_VR0,J_VR0,K_VR0)-SD(IJK,L,I_VR1,J_VR1,K_VR1)
                enddo
            enddo
            enddo
            enddo
        elseif(sweep==-1)then
          DO K=Kbgn,Kend
          DO J=Jbgn,Jend
          DO I=Ibgn,Iend
            CALL VBC_SETlrnum    (I_L0,J_L0,K_L0,I_R0,J_R0,K_R0,I_L1,J_L1,K_L1,I_R1,J_R1,K_R1,I_L2,J_L2,K_L2,I_R2,J_R2,K_R2,    &
            &            I_VL0,J_VL0,K_VL0,   I_VR0,J_VR0,K_VR0,   I_VR1,J_VR1,K_VR1,   &
            &            I,J,K,  IJK,MinorMax)

            if(kindsub_BC==1)then
                vibc=0.0!gridV(IJK,1,I_VR0,J_VR0,K_VR0)
                vjbc=omega(1)*Zc(i_R0,J_R0,K_R0)!gridV(IJK,2,I_VR0,J_VR0,K_VR0)
                vkbc=-omega(1)*Yc(I_R0,J_R0,K_R0)!gridV(IJK,3,I_VR0,J_VR0,K_VR0)
            else
                vibc=0.0
                vjbc=0.0
                vkbc=0.0
            endif
!!!!!!
!		viscous wall
!!!!!!

	  !0: VL in side surf (as BC)
	  !1: VL(Dq is in center, do in Boundary_blk001) in ghost cell(VL outside surf) and connect
	  !2: VL,VR in side(use external to replace internal, external is original VL on surface) 
	  !   and  Connect in Vexternal?

	  ! need to know in which dir: I,J,K, only one side neded
	  ! all VL, VR:  I dir, Jend&Kend+1 but what about cut?
            PP(I_l0,J_l0,K_l0 ) =  PP(I_r0,J_r0,K_r0)      !boundary layer theory, pressure gradien is zero
             PP(I_l1,J_l1,K_l1 ) =  PP(I_r1,J_r1,K_r1)
            PP(I_l2,J_l2,K_l2 ) =  PP(I_r2,J_r2,K_r2)
        
            if(If_EquT)then
              T(I_l0,J_l0,K_l0 ) =  Wall_Temp/Tinf  !-T(I_r0,J_r0,K_r0)
              T(I_l1,J_l1,K_l1 ) =  Wall_Temp/Tinf  !-T(I_r1,J_r1,K_r1)
              T(I_l2,J_l2,K_l2 ) =  Wall_Temp/Tinf  !-T(I_r2,J_r2,K_r2)
              TBC=Wall_Temp/Tinf
            else
                T(I_l0,J_l0,K_l0 ) =  T(I_r0,J_r0,K_r0)
                T(I_l1,J_l1,K_l1 ) =  T(I_r1,J_r1,K_r1)
                T(I_l2,J_l2,K_l2 ) =  T(I_r2,J_r2,K_r2)
                TBC=VL(IJK,5,I_VR0,J_VR0,K_VR0)
            endif    

    !!!!!!!!first ghostcell
            V(1,I_l0,J_l0,K_l0 ) = PP(I_l0,J_l0,K_l0)/(T(I_l0,J_l0,K_l0)+Tiny)*RXM2
            den_ratio=V(1,I_l0,J_l0,K_l0 )/(V(1,I_r0,J_r0,K_r0 )+Tiny)
            den=V(1,I_l0,J_l0,K_l0)
            V(2,I_l0,J_l0,K_l0 ) =vibc*den!   !(2.0*vibc-V(2,I_r0,J_r0,K_r0)/V(1,I_r0,J_r0,K_r0))*den
            V(3,I_l0,J_l0,K_l0 ) =vjbc*den!(2.0*vjbc-V(3,I_r0,J_r0,K_r0)/V(1,I_r0,J_r0,K_r0))*den
            V(4,I_l0,J_l0,K_l0 ) =vkbc*den!(2.0*vkbc-V(4,I_r0,J_r0,K_r0)/V(1,I_r0,J_r0,K_r0))*den
!!!!!!!!second ghostcell
   
            V(1,I_l1,J_l1,K_l1 ) = PP(I_l1,J_l1,K_l1)/(T(I_l1,J_l1,K_l1)+Tiny)*RXM2
            den_ratio=V(1,I_l1,J_l1,K_l1 )/(V(1,I_r1,J_r1,K_r1 )+Tiny)
            den=V(1,I_l1,J_l1,K_l1)
            V(2,I_l1,J_l1,K_l1 ) =vibc*den!(2.0*vibc-V(2,I_r1,J_r1,K_r1)/V(1,I_r1,J_r1,K_r1))*den
            V(3,I_l1,J_l1,K_l1 ) =vjbc*den!(2.0*vjbc-V(3,I_r1,J_r1,K_r1)/V(1,I_r1,J_r1,K_r1))*den
            V(4,I_l1,J_l1,K_l1 ) =vkbc*den!(2.0*vkbc-V(4,I_r1,J_r1,K_r1)/V(1,I_r1,J_r1,K_r1))*den
!!!!!!!! third ghostcell
            V(1,I_l2,J_l2,K_l2 ) = PP(I_l2,J_l2,K_l2)/(T(I_l2,J_l2,K_l2)+Tiny)*RXM2 !XM2*gam(I_l2,J_l2,K_l2)
            den_ratio=V(1,I_l2,J_l2,K_l2 )/(V(1,I_r2,J_r2,K_r2 )+Tiny)
            den=V(1,I_l2,J_l2,K_l2)
            V(2,I_l2,J_l2,K_l2 ) =vibc*den!(2.0*vibc-V(2,I_r2,J_r2,K_r2)/V(1,I_r2,J_r2,K_r2))*den
            V(3,I_l2,J_l2,K_l2 ) =vjbc*den!(2.0*vjbc-V(3,I_r2,J_r2,K_r2)/V(1,I_r2,J_r2,K_r2))*den
            V(4,I_l2,J_l2,K_l2 ) =vkbc*den!(2.0*vkbc-V(4,I_r2,J_r2,K_r2)/V(1,I_r2,J_r2,K_r2))*den

            if(IF_turb)then
                 Dn    =  Dst(I_l0,J_l0,K_l0)
                 Den   =    V(1,I_l0,J_l0,K_l0)
                 TT    =    T(I_l0,J_l0,K_l0)
                 Rmiuw = (1.0+Csthlnd)/(TT*Csth1+Csthlnd)*(Csth1*TT)**1.5
                 Omegaw= 60.0*Rmiuw/(Den*0.075*Dn*Dn*ref*ref)
          ! Omegaw= 60.0*Rmiuw/(Den*0.075*Dn*Dn)*miuRef   !by ydd,Lref=1!
                 V(6,I_l0,J_l0,K_l0)=0.0
                V(7,I_l0,J_l0,K_l0)=Omegaw
      !      TT=T(I_l0,J_l0,K_l0)
      !      RmiuIn=(1.0+Csthlnd)/(TT+Csthlnd)*TT**1.5
                Rmiu(I_l0,J_l0,K_l0)=0.0       !Rmiuw
                V(6,I_l1,J_l1,K_l1)=0.0
                V(7,I_l1,J_l1,K_l1)=V(7,I_l0,J_l0,K_l0)
                Rmiu(I_l1,J_l1,K_l1)=Rmiu(I_l0,J_l0,K_l0)
                V(6,I_l2,J_l2,K_l2)=0.0
                V(7,I_l2,J_l2,K_l2)=V(7,I_l0,J_l0,K_l0)
                Rmiu(I_l2,J_l2,K_l2)=Rmiu(I_l0,J_l0,K_l0)
            endif
          enddo
          enddo
          enddo
        elseif(sweep==0)then
            do K=Kbgn,Kend
            do J=Jbgn,Jend
            do I=Ibgn,Iend
                CALL VBC_SETlrnum(I_L0,J_L0,K_L0,I_R0,J_R0,K_R0,I_L1,J_L1,K_L1,I_R1,J_R1,K_R1,I_L2,J_L2,K_L2,I_R2,J_R2,K_R2,    &
                &            I_VL0,J_VL0,K_VL0,   I_VR0,J_VR0,K_VR0,   I_VR1,J_VR1,K_VR1,I,J,K,  IJK,MinorMax)

                do L=1,18
                    DqDxyz(L,I_l0,J_l0,K_l0)=DqDxyz(L,I_r0,J_r0,K_r0)
                enddo
            enddo
            enddo
            enddo
        endif

END SUBROUTINE BC_Wall
